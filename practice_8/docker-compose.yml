version: '3'

services:
  
  notifications:
    build: 
      context: ./app/notifications
    environment:
      - NOTIFICATIONS_DB_URL=postgres
      - NOTIFICATIONS_DB_PORT=5432
      - NOTIFICATIONS_DB=appDB
      - NOTIFICATIONS_DB_USERNAME=admin
      - NOTIFICATIONS_DB_PASSWORD=12345678
      - REDIS_WRITE_HOST=redis-write
      - REDIS_WRITE_PORT=6379
      - REDIS_READ_HOST=redis-read
      - REDIS_READ_PORT=6380
      - REDIS_PASSWORD=12345678
      - KAFKA_URL=kafka-broker
      - KAFKA_PORT=9092
    depends_on:
      - postgres
      - redis-write
      - redis-read
  
  catalog:
    build: 
      context: ./app/catalog
    environment:
      - CATALOG_DB_URL=postgres
      - CATALOG_DB_PORT=5432
      - CATALOG_DB=appDB
      - CATALOG_DB_USERNAME=admin
      - CATALOG_DB_PASSWORD=12345678
      - KAFKA_URL=kafka-broker
      - KAFKA_PORT=9092
    depends_on:
      - postgres

  postgres:
    image: postgres:15  
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: appDB
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 12345678
    volumes:
      - ./temp/psqlDB:/var/lib/postgresql/data

  redis-write:
    image: redis:7.2.1-alpine
    ports:
      - 6379:6379
    command: redis-server --requirepass "${REDIS_PASSWORD}"
    environment:
      - REDIS_PASSWORD=12345678

  redis-read:
    image: redis:7.2.1-alpine
    ports:
      - 6380:6379
    command: redis-server --slaveof "redis-write" 6379 --masterauth "${REDIS_PASSWORD}" --requirepass "${REDIS_PASSWORD}"
    environment:
      - REDIS_PASSWORD=12345678

  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   ports:
  #     - 8081:8081
  #   environment:
  #     - REDIS_HOSTS=local:redis-write:6379
  #     - REDIS_PASSWORD=12345678
  #   depends_on:
  #     - redis-write
  #     - redis-read

  # adminer:
  #   image: adminer:latest
  #   ports:
  #     - 8082:8080
  #   depends_on: 
  #     - postgres
  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  kafka-broker:
    image: wurstmeister/kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-broker:9092"
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
  
  krakend:
    build: 
      context: ./krakend
    ports:
      - 8080:8080
    depends_on:
      - notifications
      - catalog

  mongo:
    image: mongo:latest
    volumes:
      - ./temp/mongoDB:/data/db
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
  
  graylog:
    image: graylog/graylog:5.2
    environment:
      - GRAYLOG_PASSWORD_SECRET=1234567812345678
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918 # admin
      - GRAYLOG_HTTP_EXTERNAL_URI=http://localhost:9000/
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
    ports:
      - 9000:9000
      - 12201:12201
      - 12201:12201/udp
    depends_on:
      - mongo
      - elasticsearch